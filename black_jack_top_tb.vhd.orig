--------------------------------------------------
-- PROJECT TOP -- TESTBENCH
-- Project: black-jack
-- File:  jack_black.vhd
-- Authors: Daiane Fraga, George Redivo
--------------------------------------------------

library ieee;
    use ieee.std_logic_1164.all;
    use ieee.std_logic_arith.all;
    use ieee.std_logic_unsigned.all;   
 
entity black_jack_top_tb is
end black_jack_top_tb;
 
architecture behavior of black_jack_top_tb is 
  
  constant	PERIOD		: time := 20 ns;	-- Clock: 100MHz
	
  constant	PUSH_TIME	: time := 500 ms;
	constant	WAIT_TIME	: time := 2000 ms;
	constant	SHOW_TIME	: time := 3000 ms;
  
  -- Device Under Test (DUT) --> Project Top
  component black_jack_top
  port(
    clk_in 		: in  std_logic;
    rst_in 		: in  std_logic;
    hit_in 		: in  std_logic;
    stay_in 	: in  std_logic;
    show_in 	: in  std_logic;
    card_in 	: in  std_logic_vector(3 downto 0);
    num_out 	: out std_logic_vector(7 downto 0);
    en0_out 	: out std_logic;
    en1_out 	: out std_logic;
    win_out		: out std_logic;
    lose_out	: out std_logic;
    tie_out		: out std_logic
  );
  end component;
  
  -- Card Deck
  component card_deck
  port(
		clk       : in  std_logic;
		rst       : in  std_logic;
		card_out  : out std_logic_vector(3 downto 0)
  );
  end component;

  -- Clock period definitions
  constant CLK_PERIOD : time := 10 ns;
  
  -- Clock and Reset signals
  signal sig_clk_in    : std_logic := '0';
  signal sig_rst_in    : std_logic := '0';

  -- Input signals
  signal sig_stay_in   : std_logic := '0';
  signal sig_hit_in    : std_logic := '0';
  signal sig_show_in   : std_logic := '0';
  signal sig_card_in   : std_logic_vector(3 downto 0) := (others => '0');

  -- Output signals
  signal sig_num_out   : std_logic_vector(7 downto 0);
  signal sig_win_out   : std_logic;
  signal sig_lose_out  : std_logic;
  signal sig_tie_out   : std_logic;
  signal sig_en0_out   : std_logic;   
  signal sig_en1_out   : std_logic;   

begin
 
  -- Instantiate the DUT
  dut: black_jack_top
  port map (
	-- Inputs to Game
    clk_in   => sig_clk_in,
    rst_in   => sig_rst_in,
    stay_in  => sig_stay_in,
    hit_in   => sig_hit_in,
    show_in  => sig_show_in,
    card_in  => sig_card_in,
	
	-- Inputs from Game
    win_out  => sig_win_out,
    lose_out => sig_lose_out,
    tie_out  => sig_tie_out,
    num_out  => sig_num_out,
    en0_out  => sig_en0_out,
    en1_out  => sig_en1_out
  );
  
  -- Instantiate the card deck
  deck: card_deck
  port map (
    clk      => sig_clk_in,
    rst      => sig_rst_in,
    card_out => sig_card_in
  );
  
  -- Generate clock
	sig_clk_in	<= not sig_clk_in after (CLK_PERIOD/2);
 
<<<<<<< Updated upstream
  -- Stimulus process
  stim_proc: process
  begin		
    report "Stimulus process started"
    severity note;
--    wait for 100 ns;	
--    report "Waiting for 52 clock cicles..."
--    severity note;
--    wait for 800 ms;
--    report "Initializing..."
--    severity note;
--    rst_in <= '1';
--    wait for CLK_PERIOD*2;
--    rst_in <= '0';
--    wait;
    -- Push reset button
		wait for WAIT_TIME;
		rst_in <= '1';
		wait for PUSH_TIME;
		rst_in <= '0';

		-- Push hit button
		wait for WAIT_TIME;
		hit_in <= '1';
		wait for PUSH_TIME;
		hit_in <= '0';

		-- Push hit button again
		wait for WAIT_TIME;
		hit_in <= '1';
		wait for PUSH_TIME;
		hit_in <= '0';

		-- Push stay button
		wait for WAIT_TIME;
		stay_in <= '1';
		wait for PUSH_TIME;
		stay_in <= '0';

		-- Push show button
		wait for WAIT_TIME;
		show_in <= '1';
		wait for SHOW_TIME;
		show_in <= '0';

  end process;
=======
	-- Stimulus process
	stim_proc: process
	begin		
		-- Push reset
		wait for 50 ms;
		sig_rst_in <= '1';
		wait for 20 ms;
		sig_rst_in <= '0';
		
		-- Push hit
		wait for 50 ms;
		sig_hit_in <= '1';
		wait for 20 ms;
		sig_hit_in <= '0';
		
		-- Push hit again
		wait for 50 ms;
		sig_hit_in <= '1';
		wait for 20 ms;
		sig_hit_in <= '0';
		
		-- Push stay
		wait for 50 ms;
		sig_stay_in <= '1';
		wait for 20 ms;
		sig_stay_in <= '0';
		
		-- Push show
		wait for 50 ms;
		sig_show_in <= '1';
		wait for 100 ms;
		sig_show_in <= '0';
		
	end process;
>>>>>>> Stashed changes
end;
